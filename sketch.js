let value = 0;
function setup() {
  createCanvas(600, 600);
  frameRate(6);
  colorArray = [
    color("#ff007f"),
    color("#cd2021"),
    color("#f51321"),
    color("#f0dede"),
    color("#f4eb1a"),
    color("#e1d921"),
    color("#196874"),
    color("#27980d"),
    color("#e79516"),
    color("#FD5D5B"),
    color("#DD2255"),    
    color("#cc8655"),    
  ];
}

function draw() {
  background("#98d040");
  scale(0.8);
  
  //text
  push();
  textSize(20);
  text("Move mouse around", 50, 50);
  push();
  //background
  translate(0,-100);
  rotate(PI/4);
  fill(random(colorArray));
  rect(200,10,400);
  fill(random(colorArray));
  rect(500,200,350);
  rotate(-PI/2);
  fill(random(colorArray));
  rect(10,300,350);
  fill(random(colorArray));
  rect(-250,500,600);
  pop();
    textSize(20);
    text("Click to save the image", 500, 720);
  pop();
  
  //horns
  push();
  fill("#efd62d");
  beginShape();
  vertex(350, 210);
  vertex(350, 210);
  vertex(200, 20);
  curveVertex(210, 80);
  vertex(170, 90);
  curveVertex(240, 140);
  vertex(320, 240);
  vertex(480, 240);
  curveVertex(560, 140);
  vertex(630, 90);
  curveVertex(590, 80);
  vertex(600, 20);
  vertex(450, 210);
  vertex(450, 210);
  endShape();
  pop();

  //face
  push();
  fill("#fb4022");
  translate(0, 50);
  let ctr1 = random(80, 110);
  let ctr2 = random(60, 180);
  let ctr3 = random(80, 100);
  let ctr4 = random(160, 240);
  let ctr5 = random(160, 240);
  let ctr6 = random(240, 320);
  let ctr7 = random(640, 720);
  let ctr8 = random(90, 120);
  beginShape();
  curveVertex(400, 80);
  curveVertex(400, 80);
  curveVertex(380, ctr1);
  curveVertex(320, 160);
  curveVertex(240, ctr2);
  curveVertex(ctr8, 160);
  curveVertex(ctr3, 240);
  curveVertex(160, 320);
  curveVertex(160, 400);
  curveVertex(ctr4, 450);
  curveVertex(ctr5, 560);
  curveVertex(ctr6, 640);
  curveVertex(400, ctr7);
  curveVertex(800 - ctr6, 640);
  curveVertex(800 - ctr5, 560);
  curveVertex(800 - ctr4, 450);
  curveVertex(640, 400);
  curveVertex(640, 320);
  curveVertex(800 - ctr3, 240);
  curveVertex(800 - ctr8, 160);
  curveVertex(560, ctr2);
  curveVertex(480, 160);
  curveVertex(420, ctr1);
  curveVertex(400, 80);
  curveVertex(400, 80);
  endShape();
  pop();

  //eyes
  push();
  fill("#dde9f3");
  translate(100, 150);
  if (mouseX < 400) {
    ellipse(200, 200, mouseX / 4, mouseX / 4 - 50);
    ellipse(400, 200, mouseX / 4, mouseX / 4 - 50);
  } else {
    fill("#98d040");
    ellipse(200, 200, random(60, 100));
    ellipse(400, 200, random(60, 100));
  }
  fill("black");
  if (mouseX < 400) {
    ellipse(200, 200, 10);
    ellipse(400, 200, 10);
  } else {
    ellipse(200, 200, 40);
    ellipse(400, 200, 40);
  }
  pop();

  //brow
  push();
  scale(1.3);
  if (mouseY < 300) {
    fill("#e9db30");
    translate(20, 30);
    beginShape();
    vertex(134.17, 136.71);
    bezierVertex(
      132.70999999999998,
      137.17000000000002,
      132.48999999999998,
      145.75,
      136.82,
      152.64000000000001
    );
    bezierVertex(
      140.39,
      158.32000000000002,
      144.22,
      158.34,
      149.17,
      162.69000000000003
    );
    bezierVertex(
      158.88,
      171.23000000000002,
      154.23999999999998,
      180.11,
      161.51,
      189.82000000000002
    );
    bezierVertex(
      169.41,
      200.37000000000003,
      177.2,
      192.95000000000002,
      195.32,
      204.84000000000003
    );
    bezierVertex(
      207.10999999999999,
      212.57000000000002,
      209.48,
      219.42000000000004,
      225.44,
      227.59000000000003
    );
    bezierVertex(
      234.37,
      232.16000000000003,
      237.6,
      232.04000000000002,
      239.64,
      231.63000000000002
    );
    bezierVertex(
      250.35999999999999,
      229.48000000000002,
      255.25,
      213.87000000000003,
      258.46,
      203.59000000000003
    );
    bezierVertex(
      259.57,
      200.04000000000002,
      268.56,
      170.28000000000003,
      258.69,
      153.29000000000002
    );
    bezierVertex(
      257.81,
      151.77,
      255.72,
      148.54000000000002,
      254.91,
      143.69000000000003
    );
    bezierVertex(
      253.37,
      134.48000000000002,
      257.73,
      127.21000000000002,
      257.11,
      126.95000000000003
    );
    bezierVertex(
      256.52000000000004,
      126.71000000000004,
      251.68,
      132.88000000000002,
      250.31,
      141.82000000000002
    );
    bezierVertex(
      249.2,
      149.07000000000002,
      251.5,
      150.79000000000002,
      250.43,
      159.57000000000002
    );
    bezierVertex(
      249.85,
      164.39000000000001,
      248.99,
      171.45000000000002,
      244.99,
      173.00000000000003
    );
    bezierVertex(
      241.15,
      174.48000000000002,
      238.47,
      169.30000000000004,
      234.05,
      170.38000000000002
    );
    bezierVertex(
      227.74,
      171.92000000000002,
      228.04000000000002,
      183.73000000000002,
      222.32000000000002,
      184.85000000000002
    );
    bezierVertex(
      219.55,
      185.39000000000001,
      217.01000000000002,
      183.10000000000002,
      213.87000000000003,
      180.20000000000002
    );
    bezierVertex(
      205.04000000000002,
      172.01000000000002,
      206.82000000000002,
      165.95000000000002,
      200.45000000000005,
      160.22000000000003
    );
    bezierVertex(
      195.51000000000005,
      155.78000000000003,
      193.82000000000005,
      158.85000000000002,
      180.74000000000004,
      153.40000000000003
    );
    bezierVertex(
      167.42000000000004,
      147.85000000000002,
      168.08000000000004,
      144.21000000000004,
      160.51000000000005,
      143.44000000000003
    );
    bezierVertex(
      151.22000000000006,
      142.50000000000003,
      146.30000000000004,
      147.59000000000003,
      140.40000000000003,
      143.96000000000004
    );
    bezierVertex(
      136.04000000000002,
      141.28000000000003,
      135.31000000000003,
      136.38000000000002,
      134.18000000000004,
      136.74000000000004
    );
    endShape();
    translate(-12, -13);
    beginShape();
    vertex(454.47, 149.89);
    bezierVertex(
      455.93,
      150.35,
      456.15000000000003,
      158.92999999999998,
      451.82000000000005,
      165.82
    );
    bezierVertex(
      448.25000000000006,
      171.5,
      444.4200000000001,
      171.51999999999998,
      439.47,
      175.87
    );
    bezierVertex(
      429.76000000000005,
      184.41,
      434.40000000000003,
      193.29000000000002,
      427.13000000000005,
      203
    );
    bezierVertex(
      419.2300000000001,
      213.55,
      411.44000000000005,
      206.13,
      393.32000000000005,
      218.02
    );
    bezierVertex(
      381.53000000000003,
      225.75,
      379.16,
      232.60000000000002,
      363.20000000000005,
      240.77
    );
    bezierVertex(
      354.27000000000004,
      245.34,
      351.04,
      245.22,
      349.00000000000006,
      244.81
    );
    bezierVertex(
      338.28000000000003,
      242.66,
      333.39000000000004,
      227.05,
      330.18000000000006,
      216.77
    );
    bezierVertex(
      329.07000000000005,
      213.22,
      320.08000000000004,
      183.46,
      329.95000000000005,
      166.47000000000003
    );
    bezierVertex(
      330.83000000000004,
      164.95000000000002,
      332.9200000000001,
      161.72000000000003,
      333.73,
      156.87000000000003
    );
    bezierVertex(
      335.27000000000004,
      147.66000000000003,
      330.91,
      140.39000000000004,
      331.53000000000003,
      140.13000000000002
    );
    bezierVertex(
      332.12,
      139.89000000000001,
      336.96000000000004,
      146.06000000000003,
      338.33000000000004,
      155.00000000000003
    );
    bezierVertex(
      339.44000000000005,
      162.25000000000003,
      337.14000000000004,
      163.97000000000003,
      338.21000000000004,
      172.75000000000003
    );
    bezierVertex(
      338.79,
      177.57000000000002,
      339.65000000000003,
      184.63000000000002,
      343.65000000000003,
      186.18000000000004
    );
    bezierVertex(
      347.49,
      187.66000000000003,
      350.17,
      182.48000000000005,
      354.59000000000003,
      183.56000000000003
    );
    bezierVertex(
      360.90000000000003,
      185.10000000000002,
      360.6,
      196.91000000000003,
      366.32000000000005,
      198.03000000000003
    );
    bezierVertex(
      369.09000000000003,
      198.57000000000002,
      371.63000000000005,
      196.28000000000003,
      374.77000000000004,
      193.38000000000002
    );
    bezierVertex(
      383.6,
      185.19000000000003,
      381.82000000000005,
      179.13000000000002,
      388.19000000000005,
      173.40000000000003
    );
    bezierVertex(
      393.13000000000005,
      168.96000000000004,
      394.82000000000005,
      172.03000000000003,
      407.90000000000003,
      166.58000000000004
    );
    bezierVertex(
      421.22,
      161.03000000000003,
      420.56000000000006,
      157.39000000000004,
      428.13000000000005,
      156.62000000000003
    );
    bezierVertex(
      437.4200000000001,
      155.68000000000004,
      442.34000000000003,
      160.77000000000004,
      448.24000000000007,
      157.14000000000004
    );
    bezierVertex(
      452.6000000000001,
      154.46000000000004,
      453.33000000000004,
      149.56000000000003,
      454.4600000000001,
      149.92000000000004
    );
    endShape();
  }
  if (mouseY >= 300) {
    fill("#f5901a");
    translate(10, 60);
    beginShape();
    vertex(454.74, 128.62);
    bezierVertex(451.79, 132.62, 446.96000000000004, 137.78, 440.14, 138.93);
    bezierVertex(429.14, 140.78, 424.15, 130.3, 406.69, 125.94000000000001);
    bezierVertex(
      401.26,
      124.58000000000001,
      387.06,
      121.04,
      376.81,
      128.07000000000002
    );
    bezierVertex(
      367.26,
      134.62000000000003,
      370.14,
      144.18,
      362.27,
      146.94000000000003
    );
    bezierVertex(
      351.99,
      150.54000000000002,
      340.7,
      136.45000000000002,
      331.39,
      141.83
    );
    bezierVertex(328.51, 143.49, 327.84, 145.84, 324.68, 146.14000000000001);
    bezierVertex(320.3, 146.55, 315.51, 142.61, 313.49, 138.12);
    bezierVertex(310.99, 132.58, 314.14, 129.38, 314.37, 121);
    bezierVertex(314.72, 108.56, 308.27, 98.47, 307.36, 98.74);
    bezierVertex(
      306.52000000000004,
      99,
      309.16,
      105.36999999999999,
      309.01,
      116.46
    );
    bezierVertex(
      308.88,
      126.00999999999999,
      306.84,
      127.19,
      306.53999999999996,
      134.59
    );
    bezierVertex(
      306.36999999999995,
      138.79,
      306.91999999999996,
      141.11,
      314.36999999999995,
      163.44
    );
    bezierVertex(
      319.93999999999994,
      180.11,
      320.97999999999996,
      182.85,
      324.25999999999993,
      186.11
    );
    bezierVertex(
      326.24999999999994,
      188.08,
      333.0799999999999,
      195.07000000000002,
      341.1599999999999,
      194.35000000000002
    );
    bezierVertex(
      350.5199999999999,
      193.51000000000002,
      351.3599999999999,
      183.27,
      365.0599999999999,
      170.86
    );
    bezierVertex(
      373.76999999999987,
      162.97000000000003,
      382.26999999999987,
      159.42000000000002,
      399.26999999999987,
      152.31
    );
    bezierVertex(
      414.02999999999986,
      146.14000000000001,
      419.52999999999986,
      146.01,
      423.9999999999999,
      146.95
    );
    bezierVertex(
      428.39999999999986,
      147.86999999999998,
      429.9399999999999,
      149.44,
      434.7199999999999,
      149.42
    );
    bezierVertex(
      436.2299999999999,
      149.42,
      446.62999999999994,
      149.36999999999998,
      452.0299999999999,
      141.17999999999998
    );
    bezierVertex(
      455.3399999999999,
      136.14999999999998,
      454.99999999999994,
      130.73,
      454.74999999999994,
      128.60999999999999
    );
    endShape();

    translate(10,0);
    beginShape();
    vertex(588.64-454.74, 128.62);
    bezierVertex(
      588.64 - 451.79,
      132.62,
      588.64-446.96000000000004,
      137.78,
      588.64-440.14,
      138.93
    );
    bezierVertex(588.64-429.14, 140.78, 588.64-424.15, 130.3, 588.64-406.69, 125.94000000000001);
    bezierVertex(
      588.64-401.26,
      124.58000000000001,
      588.64-387.06,
      121.04,
      588.64-376.81,
      128.07000000000002
    );
    bezierVertex(
      588.64-367.26,
      134.62000000000003,
      588.64-370.14,
      144.18,
      588.64-362.27,
      146.94000000000003
    );
    bezierVertex(
      588.64-351.99,
      150.54000000000002,
      588.64-340.7,
      136.45000000000002,
      588.64-331.39,
      141.83
    );
    bezierVertex(588.64-328.51, 143.49, 588.64-327.84, 145.84, 588.64-324.68, 146.14000000000001);
    bezierVertex(588.64-320.3, 146.55, 588.64-315.51, 142.61, 588.64-313.49, 138.12);
    bezierVertex(588.64-310.99, 132.58, 588.64-314.14, 129.38, 588.64-314.37, 121);
    bezierVertex(588.64-314.72, 108.56, 588.64-308.27, 98.47, 588.64-307.36, 98.74);
    bezierVertex(
      588.64-306.52000000000004,
      99,
      588.64-309.16,
      105.36999999999999,
      588.64-309.01,
      116.46
    );
    bezierVertex(
      588.64-308.88,
      126.00999999999999,
      588.64-306.84,
      127.19,
      588.64-306.53999999999996,
      134.59
    );
    bezierVertex(
      588.64-306.36999999999995,
      138.79,
      588.64-306.91999999999996,
      141.11,
      588.64-314.36999999999995,
      163.44
    );
    bezierVertex(
      588.64-319.93999999999994,
      180.11,
      588.64-320.97999999999996,
      182.85,
      588.64-324.25999999999993,
      186.11
    );
    bezierVertex(
      588.64-326.24999999999994,
      188.08,
      588.64-333.0799999999999,
      195.07000000000002,
      588.64-341.1599999999999,
      194.35000000000002
    );
    bezierVertex(
      588.64-350.5199999999999,
      193.51000000000002,
      588.64-351.3599999999999,
      183.27,
      588.64-365.0599999999999,
      170.86
    );
    bezierVertex(
      588.64-373.76999999999987,
      162.97000000000003,
      588.64-382.26999999999987,
      159.42000000000002,
      588.64-399.26999999999987,
      152.31
    );
    bezierVertex(
      588.64-414.02999999999986,
      146.14000000000001,
      588.64-419.52999999999986,
      146.01,
      588.64-423.9999999999999,
      146.95
    );
    bezierVertex(
      588.64-428.39999999999986,
      147.86999999999998,
      588.64-429.9399999999999,
      149.44,
      588.64-434.7199999999999,
      149.42
    );
    bezierVertex(
      588.64-436.2299999999999,
      149.42,
      588.64-446.62999999999994,
      149.36999999999998,
      588.64-452.0299999999999,
      141.17999999999998
    );
    bezierVertex(
      588.64-455.3399999999999,
      136.14999999999998,
      588.64-454.99999999999994,
      130.73,
      588.64-454.74999999999994,
      128.60999999999999
    );
    vertex(588.64-454.74, 128.62);
    endShape();

  }

  pop();

  //nose
  push();
  fill("#cd2021");
  translate(0, 50);
  ellipse(350, 400, mouseY / 10);
  ellipse(450, 400, mouseY / 10);
  pop();
  //mouth
  push();
  fill("#dde9f3");
  translate(0, 70);
  beginShape();
  curveVertex(400, 400 + mouseY / 8);
  curveVertex(400, 400 + mouseY / 8);
  curveVertex(300, 400 + mouseY / 8);
  curveVertex(300, 600 - mouseY / 8);
  curveVertex(400, 600 - mouseY / 8);
  curveVertex(500, 600 - mouseY / 8);
  curveVertex(500, 400 + mouseY / 8);
  curveVertex(400, 400 + mouseY / 8);
  curveVertex(400, 400 + mouseY / 8);
  endShape();
  pop();
  //beards
  
}
  //imagesave
  function mouseClicked() {
  if (value === 0) {
    saveCanvas('iamyourDRAGON', 'jpg');
    print("saving image");
  }
  return false;
  }
  